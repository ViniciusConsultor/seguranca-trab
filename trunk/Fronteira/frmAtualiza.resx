<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OqYC1DgqCgAAAABJRU5ErkJggg==
</value>
  </data>
</root>