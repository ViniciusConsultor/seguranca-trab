<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UbmiZfB1YAAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="epAcesso.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>